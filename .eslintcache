[{"C:\\my-whizdata\\src\\index.js":"1","C:\\my-whizdata\\src\\App.js":"2","C:\\my-whizdata\\src\\serviceWorker.js":"3","C:\\my-whizdata\\src\\reponsive.js":"4","C:\\my-whizdata\\src\\routes.js":"5","C:\\my-whizdata\\src\\components\\Wizard.js":"6","C:\\my-whizdata\\src\\components\\Signup.js":"7","C:\\my-whizdata\\src\\components\\Main.js":"8","C:\\my-whizdata\\src\\components\\ScrollTop.js":"9","C:\\my-whizdata\\src\\components\\typo\\Contacts.js":"10","C:\\my-whizdata\\src\\components\\Detail.js\\offering.js":"11","C:\\my-whizdata\\src\\components\\Detail.js\\aproach.js":"12","C:\\my-whizdata\\src\\components\\Detail.js\\baseline.js":"13","C:\\my-whizdata\\src\\components\\genric.js":"14","C:\\my-whizdata\\src\\components\\Topbar.js":"15","C:\\my-whizdata\\src\\components\\typo\\map.js":"16","C:\\my-whizdata\\src\\components\\common\\contactfileds.js":"17","C:\\my-whizdata\\src\\components\\common\\Months.js":"18","C:\\my-whizdata\\src\\components\\common\\formdata.js":"19","C:\\my-whizdata\\src\\components\\Menu.js":"20","C:\\my-whizdata\\src\\components\\Footer.js":"21","C:\\my-whizdata\\src\\components\\Dashboard.js":"22","C:\\my-whizdata\\src\\components\\common\\Loading.js":"23","D:\\whizd\\src\\index.js":"24","D:\\whizd\\src\\serviceWorker.js":"25","D:\\whizd\\src\\reponsive.js":"26","D:\\whizd\\src\\routes.js":"27","D:\\whizd\\src\\components\\ScrollTop.js":"28","D:\\whizd\\src\\components\\Main.js":"29","D:\\whizd\\src\\components\\Detail.js\\offering.js":"30","D:\\whizd\\src\\components\\typo\\Contacts.js":"31","D:\\whizd\\src\\components\\Detail.js\\baseline.js":"32","D:\\whizd\\src\\components\\Detail.js\\aproach.js":"33","D:\\whizd\\src\\components\\Wizard.js":"34","D:\\whizd\\src\\components\\genric.js":"35","D:\\whizd\\src\\components\\typo\\map.js":"36","D:\\whizd\\src\\components\\Topbar.js":"37","D:\\whizd\\src\\components\\common\\contactfileds.js":"38","D:\\whizd\\src\\components\\Menu.js":"39","D:\\whizd\\src\\components\\common\\formdata.js":"40","D:\\whizd\\src\\components\\Footer.js":"41","D:\\whizd\\src\\components\\AboutUs.js":"42"},{"size":506,"mtime":1582194601000,"results":"43","hashOfConfig":"44"},{"size":885,"mtime":1610431016905,"results":"45","hashOfConfig":"44"},{"size":4948,"mtime":1582194600000,"results":"46","hashOfConfig":"44"},{"size":1656,"mtime":1582194600000,"results":"47","hashOfConfig":"44"},{"size":1176,"mtime":1582194601000,"results":"48","hashOfConfig":"44"},{"size":22095,"mtime":1610442661983,"results":"49","hashOfConfig":"44"},{"size":6255,"mtime":1582194600000,"results":"50","hashOfConfig":"44"},{"size":20449,"mtime":1600884807400,"results":"51","hashOfConfig":"44"},{"size":382,"mtime":1582194600000,"results":"52","hashOfConfig":"44"},{"size":17697,"mtime":1601462470929,"results":"53","hashOfConfig":"44"},{"size":18448,"mtime":1602264309308,"results":"54","hashOfConfig":"44"},{"size":16390,"mtime":1582194600000,"results":"55","hashOfConfig":"44"},{"size":11875,"mtime":1582194600000,"results":"56","hashOfConfig":"44"},{"size":29395,"mtime":1610484170368,"results":"57","hashOfConfig":"44"},{"size":7419,"mtime":1600578349029,"results":"58","hashOfConfig":"44"},{"size":2628,"mtime":1582194600000,"results":"59","hashOfConfig":"44"},{"size":1759,"mtime":1600852024604,"results":"60","hashOfConfig":"44"},{"size":626,"mtime":1582194600000,"results":"61","hashOfConfig":"44"},{"size":831,"mtime":1600665105816,"results":"62","hashOfConfig":"44"},{"size":324,"mtime":1582194600000,"results":"63","hashOfConfig":"44"},{"size":3923,"mtime":1582194600000,"results":"64","hashOfConfig":"44"},{"size":13092,"mtime":1610442644167,"results":"65","hashOfConfig":"44"},{"size":721,"mtime":1582194600000,"results":"66","hashOfConfig":"44"},{"size":506,"mtime":1582194601000,"results":"67","hashOfConfig":"68"},{"size":4948,"mtime":1582194600000,"results":"69","hashOfConfig":"68"},{"size":1656,"mtime":1582194600000,"results":"70","hashOfConfig":"68"},{"size":1166,"mtime":1610519523733,"results":"71","hashOfConfig":"68"},{"size":382,"mtime":1582194600000,"results":"72","hashOfConfig":"68"},{"size":19826,"mtime":1610520596425,"results":"73","hashOfConfig":"68"},{"size":16149,"mtime":1610519593949,"results":"74","hashOfConfig":"68"},{"size":17309,"mtime":1610520899574,"results":"75","hashOfConfig":"68"},{"size":10643,"mtime":1610519572255,"results":"76","hashOfConfig":"68"},{"size":13935,"mtime":1610519625570,"results":"77","hashOfConfig":"68"},{"size":21850,"mtime":1610519282918,"results":"78","hashOfConfig":"68"},{"size":28923,"mtime":1610519159967,"results":"79","hashOfConfig":"68"},{"size":2629,"mtime":1610514827008,"results":"80","hashOfConfig":"68"},{"size":7444,"mtime":1610519393110,"results":"81","hashOfConfig":"68"},{"size":1759,"mtime":1600852024604,"results":"82","hashOfConfig":"68"},{"size":342,"mtime":1610519411773,"results":"83","hashOfConfig":"68"},{"size":875,"mtime":1610519016172,"results":"84","hashOfConfig":"68"},{"size":3659,"mtime":1610514941735,"results":"85","hashOfConfig":"68"},{"size":6298,"mtime":1610519650097,"results":"86","hashOfConfig":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"1qtszfp",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"89"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"89"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"89"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},"1cn2utn",{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\my-whizdata\\src\\index.js",[],["182","183"],"C:\\my-whizdata\\src\\App.js",[],"C:\\my-whizdata\\src\\serviceWorker.js",[],"C:\\my-whizdata\\src\\reponsive.js",[],"C:\\my-whizdata\\src\\routes.js",["184","185"],"import React from \"react\";\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\"\nimport Wizard from \"./components/Wizard\";\nimport Contacts from \"./components/typo/Contacts\";\nimport Main from \"./components/Main\";\nimport Signup from \"./components/Signup\";\nimport ScrollToTop from \"./components/ScrollTop\";\nimport Offerings from \"./components/Detail.js/offering\";\nimport Aboutwork from \"./components/Detail.js/aproach\";\nimport Baseline from \"./components/Detail.js/baseline\";\n\n\nexport default props => (\n  <HashRouter>\n    <ScrollToTop>\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        {/* <Route exact path=\"/dashboard\" component={Dashboard} /> */}\n        <Route exact path=\"/aboutus\" component={Signup} />\n        <Route exact path=\"/case-Studies\" component={Wizard} />\n        <Route exact path=\"/contacts\" component={Contacts} />\n        <Route exact path=\"/offerings\" component={Offerings} />\n        <Route exact path=\"/aproch-to-work\" component={Aboutwork} />\n        <Route exact path=\"/baseline-characteristics\" component={Baseline} />\n      </Switch>\n    </ScrollToTop>\n  </HashRouter>\n);\n","C:\\my-whizdata\\src\\components\\Wizard.js",["186","187","188","189","190","191"],"import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Topbar from \"./Topbar\";\nimport PublicOutlinedIcon from \"@material-ui/icons/PublicOutlined\";\nimport WorkOutlineOutlinedIcon from \"@material-ui/icons/WorkOutlineOutlined\";\nimport { styles } from \"./genric.js\";\nimport Card from \"@material-ui/core/Card\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport ImportExportOutlinedIcon from \"@material-ui/icons/ImportExportOutlined\";\nimport PhoneAndroidOutlinedIcon from \"@material-ui/icons/PhoneAndroidOutlined\";\nimport Icon from \"@material-ui/core/Icon\";\nimport EmojiPeopleOutlinedIcon from \"@material-ui/icons/EmojiPeopleOutlined\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport EqualizerOutlinedIcon from \"@material-ui/icons/EqualizerOutlined\";\nimport DesktopWindowsOutlinedIcon from \"@material-ui/icons/DesktopWindowsOutlined\";\nimport CloudOutlinedIcon from \"@material-ui/icons/CloudOutlined\";\nimport PaymentIcon from \"@material-ui/icons/Payment\";\nimport EventNoteOutlinedIcon from \"@material-ui/icons/EventNoteOutlined\";\nimport AccountBalanceWalletOutlinedIcon from \"@material-ui/icons/AccountBalanceWalletOutlined\";\nimport PeopleOutlineIcon from \"@material-ui/icons/PeopleOutline\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport LocalShippingOutlinedIcon from \"@material-ui/icons/LocalShippingOutlined\";\nimport ListAltOutlinedIcon from \"@material-ui/icons/ListAltOutlined\";\nimport MultilineChartOutlinedIcon from \"@material-ui/icons/MultilineChartOutlined\";\nimport { Link } from \"react-router-dom\";\n\nconst cards = [\n  {\n    id: 1,\n    title: <b>Sports</b>,\n    slidein: false,\n    transitionDelay: \"100ms\",\n    iconclass: width => (\n      <EventNoteOutlinedIcon style={{ width: width, height: width }} />\n    ),\n    techicons: [\n      { icon: <DesktopWindowsOutlinedIcon />, message: \"desktop\" },\n      { icon: <PhoneAndroidOutlinedIcon />, message: \"android\" },\n      { icon: <CloudOutlinedIcon />, message: \"cloud\" },\n      { icon: <PaymentIcon />, message: \"payment\" }\n    ],\n\n    heading: \"Event, participants, payment,fans, social media\",\n    subheading:\n      \"The application requiresdesigning a simple-to-use system where – \",\n    projectdetails: [\n      \"Organizers announce an event\",\n      \"Participants are qualified and pay to perform in the event\",\n      \"Fans get updates,includes progress,live video,analytics etc\"\n    ],\n\n    projchallenges: [\n      \"Simple, quick interface for the organizer\",\n      \"Fan UX\",\n      \"Stats and analytics for the performers\"\n    ],\n    open: false,\n    checked: true\n  },\n\n  {\n    id: 2,\n    slidein: false,\n    title: \"  Resource management\",\n    transitionDelay: \"400ms\",\n    checked: true,\n\n    techicons: [\n      { icon: <DesktopWindowsOutlinedIcon />, message: \"desktop\" },\n      { icon: <PhoneAndroidOutlinedIcon />, message: \"android\" },\n      { icon: <CloudOutlinedIcon />, message: \"cloud\" },\n      { icon: <EqualizerOutlinedIcon />, message: \"statistics\" }\n    ],\n\n    iconclass: width => (\n      <EmojiPeopleOutlinedIcon style={{ width: width, height: width }} />\n    ),\n    heading: \"Production, stock, orders, supply, enquiries, stats\",\n    subheading:\n      \"This application provides complete production to supply tracking at the fingertips for a family run production mill. Key indicators are – \",\n    projectdetails: [\n      \" Order requests\",\n      \"Stock info against incoming orders\",\n      \"Production line availability against deficit of stock\",\n\n      \"Raw material availability against deficit of stock\"\n    ],\n\n    projchallenges: [\n      \"Mobile CXO dashboard\",\n      \"Stats architecture with live updates\",\n      \"Integrated messaging\"\n    ],\n\n    open: false\n  },\n  {\n    id: 3,\n    slidein: false,\n    checked: true,\n    transitionDelay: \"500ms\",\n    title: \" Food Industry\",\n\n    techicons: [\n      { icon: <DesktopWindowsOutlinedIcon />, message: \"desktop\" },\n      { icon: <PhoneAndroidOutlinedIcon />, message: \"android\" },\n      { icon: <CloudOutlinedIcon />, message: \"cloud\" },\n      { icon: <EqualizerOutlinedIcon />, message: \"statistics\" }\n    ],\n    iconclass: width => (\n      <AccountBalanceWalletOutlinedIcon\n        style={{ width: width, height: width }}\n      />\n    ),\n    heading: \"Service booking, providers, consumers, payment, ratings\",\n    subheading:\n      \"This scalable, integrated home services platform provides a simple UX for people to request services for their daily needs at home. The ingredients of this system are – \",\n    projectdetails: [\n      \"Admin and franchisee ,Ratings\",\n      \"Secure server with authentication ,Payment\",\n\n      \"Service booking, response, completion lifecycle\",\n\n      \"Stats and analytics\"\n    ],\n    projchallenges: [\n      \"End-users with little or no literacy\",\n      \"Complicated rating & analytics system\",\n      \"Multiple workflow styles\"\n    ],\n    open: false\n  },\n  {\n    id: 4,\n    checked: true,\n    slidein: false,\n    transitionDelay: \"900ms\",\n    title: \" Management platform\",\n\n    techicons: [\n      { icon: <DesktopWindowsOutlinedIcon />, message: \"desktop\" },\n      { icon: <PhoneAndroidOutlinedIcon />, message: \"android\" },\n      { icon: <CloudOutlinedIcon />, message: \"cloud\" },\n      { icon: <EqualizerOutlinedIcon />, message: \"statistics\" }\n    ],\n    iconclass: width => (\n      <MultilineChartOutlinedIcon style={{ width: width, height: width }} />\n    ),\n    heading: \"Sensors, historical data, rolebased-access, KPIs, graphs\",\n    subheading:\n      \"This industrial application provides three-part solution which encompasses a business and technical components -\",\n    projectdetails: [\n      \"A software stack linked to physical sensors installed in the plant via a server\",\n      \"A business dashboard\",\n      \"Two levels of Admin dashboard\",\n      \"Mobile app, analytics, graphs and alerts\"\n    ],\n\n    projchallenges: [\n      \"Business dashboard which drives SLA through settings\",\n      // \"UX for CXO\",\n      \"Scalability for KPI, sites\"\n    ],\n    open: false\n  },\n  {\n    id: 5,\n    checked: true,\n    slidein: false,\n    transitionDelay: \"1000ms\",\n    title: \" Management platform\",\n    iconclass: width => (\n      <PeopleOutlineIcon style={{ width: width, height: width }} />\n    ),\n\n    techicons: [\n      { icon: <DesktopWindowsOutlinedIcon />, message: \"desktop\" },\n      { icon: <PhoneAndroidOutlinedIcon />, message: \"android\" },\n      { icon: <CloudOutlinedIcon />, message: \"cloud\" },\n      { icon: <EqualizerOutlinedIcon />, message: \"statistics\" }\n    ],\n\n    title: \"employees, projects, billing,resource management\",\n    heading: \"Employees, projects, billing,resource management\",\n    subheading:\n      \"A margin-sensitive engineering services company sought our help to design a simple resource management system to run their operations –\",\n    projectdetails: [\n      \"Hierarchy of engineering staff\",\n      \"Assignment of employees to project(s)\",\n      \"Employee availability, rampdown data, free-pool …\",\n      \"Hyperlinked skills profile,search, stats, projection\"\n    ],\n\n    projchallenges: [\n      \"Simple employee onboarding system\",\n      \"Mobile-friendly admin UI\"\n    ],\n    open: false\n  },\n  {\n    id: 6,\n    checked: true,\n    slidein: false,\n    transitionDelay: \"1100ms\",\n    title: \" Management platform\",\n    iconclass: width => (\n      <WorkOutlineOutlinedIcon style={{ width: width, height: width }} />\n    ),\n\n    techicons: [\n      { icon: <DesktopWindowsOutlinedIcon />, message: \"desktop\" },\n      { icon: <PhoneAndroidOutlinedIcon />, message: \"android\" },\n      { icon: <CloudOutlinedIcon />, message: \"cloud\" },\n      { icon: <LocalShippingOutlinedIcon />, message: \"shipment\" }\n    ],\n    title: \"field staff management, workflows, consumables\",\n    heading: \"Field staff management, workflows, consumables\",\n    subheading:\n      \"The application is a multi-site mobile platform which helps field-staff supervisors and service delivery owners to manage site activities easily Key features are –. \",\n    projectdetails: [\n      \"Mobile dashboard for onsite supervisor \",\n      \"Template based workflow & project creation dashboard\",\n      \"Project tracking system\",\n      \"Consumables management system\",\n      \"Support for periodic and on-call activity management\"\n    ],\n\n    projchallenges: [\"UI/UX for the semi-skilled\"],\n    open: false\n  },\n  {\n    id: 7,\n    checked: true,\n    slidein: false,\n    transitionDelay: \"1100ms\",\n    title: \" Management platform\",\n    iconclass: width => <StorageIcon style={{ width: width, height: width }} />,\n\n    techicons: [\n      { icon: <DesktopWindowsOutlinedIcon />, message: \"desktop\" },\n      { icon: <ListAltOutlinedIcon />, message: \"reuseable\" },\n  { icon: <PublicOutlinedIcon />, message: \"worldwide\" },\n      { icon: <ImportExportOutlinedIcon />, message: \"bi-directional\" }\n    ],\n    title: \"field staff management, workflows, consumables\",\n    heading: \"Bidirectional large data-sync, compliance, reuse, scalable\",\n    subheading:\n      \"As design and engineer partners in a large, multi-year program for massive MDM work, we delivered –. \",\n    projectdetails: [\n      \"Successful migration of customer from a 1982 antiquated platform \",\n      \"New customer master going to seamless production\",\n      \"Massive data-handling automation\"\n    ],\n\n    projchallenges: [\n      \"Bidirectional data-sync with complex rule-set\",\n      \"Large data set and bad existing data quality\",\n      \"Scalability of platform\"\n    ],\n    open: false\n  },\n  {\n    id: 8,\n    checked: true,\n    slidein: false,\n    transitionDelay: \"1100ms\",\n    title: \" Management platform\",\n    iconclass: width => (\n      <TrendingUpIcon style={{ width: width, height: width }} />\n    ),\n\n    techicons: [\n      { icon: <DesktopWindowsOutlinedIcon />, message: \"desktop\" },\n      { icon: <PhoneAndroidOutlinedIcon />, message: \"android\" },\n      { icon: <ImportExportOutlinedIcon />, message: \"bi-directional\" },\n      { icon: <EqualizerOutlinedIcon />, message: \"statistics\" },\n      { icon: <PublicOutlinedIcon />, message: \"worldwide\" }\n    ],\n    title: \"field staff management, workflows, consumables\",\n    heading: \"Regulatory, cost reduction, disparate data, large data-set\",\n    subheading:\n      \"We engaged in a multi-year program with a large MNC to provide a customer master hub with – \",\n    projectdetails: [\n      \"Highly improved UX\",\n      \"Data query and analysis for cross-sell opportunities\",\n      \"Multiple workflows\",\n      \"Dashboards, KPIs and system to drive sales\",\n      \"Automated data governance\"\n    ],\n\n    projchallenges: [\n      \"Large data-set\",\n      \"Complex regulatory and compliance needs\",\n      \"Many KPIs and dashboards\"\n    ],\n    open: false\n  }\n];\n\nclass Wizard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cardArr: cards\n    };\n  }\n\n  handleOpen = id => {\n    this.setState(prevState => ({\n      cardArr: prevState.cardArr.map(el =>\n        el.id === id ? { ...el, open: !el.open } : el\n      )\n    }));\n  };\n\n  handleClose = id => {\n    this.setState(prevState => ({\n      cardArr: prevState.cardArr.map(el =>\n        el.id === id ? { ...el, open: !el.open } : el\n      )\n    }));\n  };\n\n  // handleChange = id => {\n  //   this.setState(prevState => ({\n  //     cardArr: prevState.cardArr.map(el =>\n  //       el.id === id ? { ...el, checked: !el.checked } : el\n  //     )\n  //   }));\n  // };\n\n  componentDidMount() {}\n\n  render() {\n    const { classes } = this.props;\n    const { cardArr, icons } = this.state;\n    const transitionDuration = 800;\n  \n    const currentPath = this.props.location.pathname;\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar currentPath={currentPath} />\n        <div className={classes.root}>\n          <Grid>\n            <Grid className={classes.workbanner} item xs={12} md={12}>\n              <img alt=\"\" className={classes.headerimg}></img>\n              <Typography variant=\"h6\" className={classes.headertext}>\n                Highlighted <span className={classes.highlightext}>Works</span>\n              </Typography>\n            </Grid>\n\n            {/* <Grid container className={classes.subgrid}> */}\n            <Paper\n              elavation={24}\n              className={classes.wizpaper + \" \" + classes.subgrid}\n            >\n              <Grid container spacing={3}>\n                {cardArr.map((value, index) => {\n                  return (\n                    <Zoom\n                      key={index}\n                      in={value.checked}\n                      style={{\n                        transitionDelay: value.checked\n                          ? value.transitionDelay\n                          : \"0ms\"\n                      }}\n                    >\n                      <Grid\n                        //container\n\n                        className={classes.layergrid}\n                        item\n                        md={4}\n                        sm={6}\n                      >\n                        <Card\n                          id={value.id}\n                          className={\n                            //  classes.outercard +\n                            //  \" \" +\n                            //  classes.card\n\n                            classes.card\n                          }\n                        >\n                          <CardActionArea\n                            style={{\n                              display: \"flex\",\n                              alignItems: \"stretch\",\n                              backgroundColor: \"#000000\"\n                            }}\n                          >\n                            <CardActions>\n                              <Icon\n                                style={{\n                                  color: \"#000000\",\n                                  marginTop: 0,\n                                  marginBottom: 0,\n                                  paddingTop: 12,\n                                  display: \"inline-block\",\n                                  textAlign: \"center\",\n                                  borderRadius: \"50%\",\n                                  width: 60,\n                                  height: 60,\n                                  backgroundColor: \"#ffffff\"\n                                }}\n                              >\n                                {value.iconclass(\"100%\")}\n                              </Icon>\n                            </CardActions>\n                          </CardActionArea>\n                          <CardContent>\n                            <Typography\n                              className={\n                                classes.sectionheading +\n                                \"  \" +\n                                classes.headingstyle\n                              }\n                              gutterBottom\n                            >\n                              {\" \"}\n                              <b>{value.heading}</b>\n                            </Typography>\n                            <Typography\n                              gutterBottom\n                              className={classes.content}\n                            >\n                              {value.subheading}\n                            </Typography>\n\n                            <Typography\n                              gutterBottom\n                              className={\n                                classes.content + \" \" + classes.fontstyle\n                              }\n                            >\n                              {value.projectdetails.map((data, index) => {\n                                return <li key={index}>{data}</li>;\n                              })}\n                            </Typography>\n\n                            {value.projchallenges.find((datalength, index) => {\n                              return datalength && datalength.length;\n                            }) ? (\n                              <Typography\n                                key={index}\n                                variant=\"h4\"\n                                gutterBottom\n                                className={classes.midheading}\n                              >\n                                Challenges-\n                              </Typography>\n                            ) : (\n                              <div></div>\n                            )}\n\n                            {value.projchallenges.map((projdata, index) => {\n                              return (\n                                <Typography\n                                  key={index}\n                                  gutterBottom\n                                  className={\n                                    classes.content + \" \" + classes.fontstyle\n                                  }\n                                >\n                                  <li> {projdata}</li>\n                                </Typography>\n                              );\n                            })}\n                          </CardContent>\n\n                          {/* <Dialog\n                            open={value.open}\n                            onClose={() => this.handleClose(value.id)}\n                            aria-labelledby=\"customized-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\"\n                            scroll=\"body\"\n                          >\n                            <Slide\n                              direction=\"right\"\n                              in={!value.slidein}\n                              timeout={transitionDuration}\n                              mountOnEnter\n                              unmountOnExit\n                            >\n                              <Paper>\n                                <DialogTitle\n                                  className={classes.sectionheading}\n                                  id=\"customized-dialog-title\"\n                                >\n                                  {value.title}\n                                </DialogTitle>\n\n                                <DialogContent dividers>\n                                  <Typography className={classes.content}>\n                                    Lorem Ipsum is simply dummy text of the\n                                    printing and typesetting industry. Lorem\n                                    Ipsum has been the industry's standard dummy\n                                    text ever since the 1500s, when an unknown\n                                    printer took a galley of type and scrambled\n                                    it to make a type specimen book.\n                                  </Typography>\n                                </DialogContent>\n                                <DialogActions className={classes.projectview}>\n                                  <Link\n                                    to=\"/contacts\"\n                                    className={classes.linkproject}\n                                  >\n                                    <Button\n                                      //  value={this.props.}\n                                      onClick={this.props.onClick}\n                                    >\n                                      SIMILAR PROJECT\n                                    </Button>\n                                  </Link>\n                                  <Button\n                                    className={classes.actionButtom}\n                                    onClick={() => this.handleClose(value.id)}\n                                  >\n                                    close\n                                  </Button>\n                                </DialogActions>\n                              </Paper>\n                            </Slide>\n                          </Dialog> */}\n\n                          <CardActions className={classes.buttonend}>\n                            <Link\n                              to={{\n                                pathname: \"/contacts\",\n                                state: {\n                                  myvalue: \"I need this similar project\"\n                                }\n                              }}\n                              className={classes.linkproject}\n                            >\n                              <Button\n                              //  value={this.props.}\n                              >\n                                SIMILAR PROJECT\n                              </Button>\n                            </Link>\n                          </CardActions>\n\n                          <CardActions>\n                            {value.techicons.map((i, index) => {\n                              return (\n                                <Tooltip\n                                  title={i.message}\n                                  key={index}\n                                  placement=\"top-start\"\n                                >\n                                  <Icon>{i.icon}</Icon>\n                                </Tooltip>\n                              );\n                            })}\n                          </CardActions>\n                        </Card>\n                      </Grid>\n                    </Zoom>\n                  );\n                })}\n              </Grid>\n            </Paper>\n          </Grid>\n          {/* </Grid> */}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles(\"wizardstyles\"))(Wizard));\n","C:\\my-whizdata\\src\\components\\Signup.js",[],"C:\\my-whizdata\\src\\components\\Main.js",["192","193","194","195","196","197","198","199","200","201","202","203","204","205","206"],"import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n// import InstructionDialog from \"./dialogs/InstructionDialog\";\n// import SwipeDialog from \"./dialogs/SwipeDialog\";\nimport { styles } from \"./genric.js\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Topbar from \"./Topbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Box from \"@material-ui/core/Box\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Footer from \"../components/Footer\";\nimport Paper from \"@material-ui/core/Paper\";\nimport SwapVertOutlinedIcon from \"@material-ui/icons/SwapVertOutlined\";\n\nimport 'core-js';\nimport 'regenerator-runtime/runtime';\nimport fields from \"./common/formdata.js\";\nimport Slider from \"react-slick\";\nconst poductlogo = [\n  // {\n  //   src: require(\"../images/nodejs.png\")\n  // },\n  // {\n  //   src: require(\"../images/react.png\")\n  // },\n  // {\n  //   src: require(\"../images/java.png\")\n  // },\n  // {\n  //   src: require(\"../images/c++.png\")\n  // },\n\n  // {\n  //   src: require(\"../images/python.png\")\n  // }\n\n  // {\n  //   name: \"node\",\n  //   src: require(\"../images/abb.png\")\n  // },\n\n  // {\n  //   name: \"react\",\n  //   src: require(\"../images/teva.png\")\n  // },\n  // {\n  //   name: \"java\",\n  //   src: require(\"../images/tt.png\")\n  // },\n\n  {\n    name: \"java\",\n    src: require(\"../images/11sports.png\")\n  },\n  {\n    name: \"java\",\n    src: require(\"../images/abb.png\")\n  },\n\n  {\n    name: \"java\",\n    src: require(\"../images/aptta.png\")\n  },\n  {\n    name: \"java\",\n    src: require(\"../images/vertex.png\")\n  },\n  {\n    name: \"java\",\n    src: require(\"../images/imshealth.png\")\n  },\n  {\n    name: \"java\",\n    src: require(\"../images/bfi.png\")\n  },\n  {\n    name: \"java\",\n    src: require(\"../images/teva.png\")\n  },\n  {\n    name: \"java\",\n    src: require(\"../images/ttmarathon.png\")\n  }\n];\n\nconst cardtemplate = [\n  {\n    id: 1,\n    directto: \"/offerings\",\n    img: require(\"../images/1.svg\"),\n    heading: \"Core Offering\",\n    subheading:\n      \" Any business operation you study today reveals some scope for introducing IT system to supplement the human efficiency.\"\n  },\n\n  {\n    id: 2,\n    directto: \"/aproch-to-work\",\n    img: require(\"../images/6.svg\"),\n    heading: \"  Approach to work\",\n    subheading:\n      \" Our experience in design , test automation and model engineering brings in some of the best systems into practice at Whizdata.\"\n  },\n  {\n    id: 3,\n    img: require(\"../images/5.svg\"),\n    heading: \" Case Studies \",\n    subheading:\n      \"Our projects span across multiple domains. Some are businesses where high-tech adoption is a challenge. and we gladly accept it. \"\n  },\n\n  {\n    id: 4,\n    directto: \"/baseline-characteristics\",\n    img: require(\"../images/4.svg\"),\n    heading: \" Baseline characteristics \",\n    subheading:\n      \"The risk of designing everything from scratch is down tremendously, because the building blocks are home-grown, well-tested parts.\"\n  }\n];\n\nclass Main extends Component {\n  state = {\n    open: false,\n    reqmsg: false,\n    checked: true,\n    requestStatus: \"\",\n    formdata: [],\n    activeStep: 0,\n    click: false,\n    cards: cardtemplate\n  };\n\n  componentDidMount() {\n    let data = [...JSON.parse(JSON.stringify(fields))];\n    this.setState({ formdata: data });\n  }\n\n  resetForm = () => {\n    let data = [...JSON.parse(JSON.stringify(fields))];\n    this.setState({ formdata: data });\n  };\n\n  openDialog = event => {\n    this.setState({\n      open: true\n    });\n  };\n\n  dialogClose = event => {\n    this.setState({\n      open: false,\n      requestStatus: \"\"\n    });\n    this.resetForm();\n  };\n\n  handleChange = e => {\n    const formvalues = [...this.state.formdata];\n\n    formvalues.find(el => {\n      if (el.id === e.target.id) el.value = e.target.value;\n    });\n\n    this.setState({ formdata: formvalues });\n  };\n\n  handleFormSubmit = e => {\n    const formvalues = [...this.state.formdata];\n\n    formvalues.map(el => {\n      el.error = \"\";\n      const emailRegEx = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i;\n\n      if (el.id == \"Email\" && el.value.match(emailRegEx)) {\n        el.error = \"\";\n      } else if (el.id == \"date\" || el.id == \"time\") {\n        if (el.value.length == 0) el.error = el.defMsg;\n      } else if (el.id == \"pnumber\" && el.value.length === 10) el.error = \"\";\n      else el.error = el.defMsg;\n    });\n\n    this.setState({ formdata: formvalues });\n\n    const errorval = this.state.formdata.find(el => {\n      if (el.error && el.error.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if (!errorval) {\n      fetch(\n        \" http://test5s.in/contactus.php\",\n        {\n          method: \"POST\",\n\n          body: JSON.stringify(this.state.formData),\n          data: JSON.stringify(this.state.formData)\n        },\n        { timeout: 5000 }\n      )\n        .then(response => response.json())\n        .then(data => {\n          // console.log(\"data .. \" + JSON.stringify(data));\n          if (data.recordAdded) {\n            this.setState({\n              // emailresponse: \"Mail sent\",\n              reqmsg: true,\n              requestStatus: \"Email sent our team will soon contact you\"\n            });\n\n            this.resetForm();\n          }\n        })\n\n        .catch(error => {\n          console.error(error);\n          this.setState({\n            reqmsg: false,\n            requestStatus: \"Error occured.Please try after sometime!!!\"\n          });\n\n          this.resetForm();\n        });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { open, cards, requestStatus, reqmsg, formdata } = this.state;\n\n    const settings = {\n      infinite: true,\n      slidesToShow: 4,\n      slidesToScroll: 3,\n      autoplay: true,\n      cssEase: \"linear\",\n      arrows: false,\n     \n      responsive: [\n        {\n          breakpoint: 1024,\n          settings: {\n          \n            slidesToShow: 4,\n            slidesToScroll: 1,\n            infinite: true,\n            dots: false\n          }\n        },\n        {\n          breakpoint: 600,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1\n          }\n        },\n        {\n          breakpoint: 480,\n          settings: {\n            vertical: true,\n            verticalSwiping: true,\n            slidesToShow: 1,\n            slidesToScroll: 1\n          }\n        }\n      ]\n    };\n    return (\n      <React.Fragment>\n        <CssBaseline />\n\n        <Topbar />\n\n        <div className={classes.root}>\n          <Grid className={classes.herobannergrid} container>\n            <img alt=\"\" className={classes.herobanner}></img>\n\n            <Typography variant=\"h6\" className={classes.herotext}>\n              Improve your digital presence <br />\n              internally and to your external ecosystem\n            </Typography>\n          </Grid>\n          {/* <div className={classes.subgrid}> */}\n          <Paper className={classes.wizpaper}>\n            <Grid container spacing={3}>\n              {cards.map((carddata, index) => {\n                return (\n                  <Grid\n                    key={index}\n                    item\n                    md={3}\n                    sm={6}\n                    // style={{ position: \"relative\" }}\n                    className={classes.layergrid}\n                  >\n                    <Card className={classes.card}>\n                      <CardActionArea>\n                        <CardMedia\n                          className={classes.media}\n                          image={carddata.img}\n                        />\n                      </CardActionArea>\n                      <CardContent className={classes.cardtext}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                          {carddata.heading}\n                        </Typography>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                          component=\"p\"\n                        >\n                          {carddata.subheading}\n                        </Typography>\n                      </CardContent>\n                      <CardActions className={classes.actionCard}>\n                        {carddata.id == 3 ? (\n                          <React.Fragment>\n                            <Button\n                              className={classes.casebutton}\n                              to=\"/case-Studies\"\n                              component={Link}\n                              size=\"small\"\n                            >\n                              Case Studies\n                            </Button>\n                            <Button\n                              onClick={this.openDialog}\n                              className={classes.actionButtom}\n                              size=\"small\"\n                            >\n                              <b> Learn more</b>\n                            </Button>\n                          </React.Fragment>\n                        ) : (\n                          <CardActions className={classes.actionCard}>\n                            <Button\n                              className={classes.actionButtom}\n                              to={carddata.directto}\n                              component={Link}\n                              size=\"small\"\n                            >\n                              <b> Learn more</b>\n                            </Button>\n                          </CardActions>\n                        )}\n                      </CardActions>\n                    </Card>\n                  </Grid>\n                );\n              })}\n            </Grid>\n\n            {/* <Paper className={classes.wizpaper}>\n              <Grid container justify=\"center\">\n                <Grid md={6}>\n                  <Grid md={12}>\n                    <Typography className={classes.sectionheading}>\n                      <b>OUR BEST PRACTICES IN SOFTWARE DEVELOPMENT</b>\n                    </Typography>\n                  </Grid>\n\n                  <Grid md={12}>\n                    <Typography\n                      variant=\"body1\"\n                      className={classes.content}\n                      gutterBottom\n                    >\n                      Whizdata uses advanced tools, technologies and\n                      methodologies for software development. The main stream of\n                      our software development activities is formed by a stack\n                      of NodeJS and other Javascript platform. All of our\n                      employees have been trained to use these software tools\n                      efficiently, with simplicity and scalability in mind.\n                    </Typography>\n                    <Typography\n                      variant=\"body1\"\n                      className={classes.content}\n                      gutterBottom\n                    >\n                      Whizdata uses advanced tools, technologies and\n                      methodologies for software development. The main stream of\n                      our software development activities is formed by a stack\n                      of NodeJS and other Javascript platform. All of our\n                      employees have been trained to use these software tools\n                      efficiently, with simplicity and scalability in mind.\n                    </Typography>\n                    <Typography\n                      variant=\"body1\"\n                      className={classes.content}\n                      gutterBottom\n                    >\n                      At Whizdata, we use a number of internally developed CASE\n                      tools, code-generators, compilers, regression QA scripts,\n                      functional and stress testing stack etc to reduce human\n                      errors and improve delivery efficiency. When building\n                      software, we use the method of short iterations which\n                      assumes that even at the very beginning of the development\n                      cycle, the delivered features are QA-ed and ready for\n                      customer's inspection. Our methodology allows us to\n                      identify discrepancies between customer expectations and\n                      our understanding at early stages and provide the fixes\n                      early in the project cycle. We use modern refactoring\n                      techniques to keep the architecture of applications simple\n                      and easy to re-use.\n                    </Typography>\n                  </Grid>\n                </Grid>\n\n                <Grid md={6}>\n                  <Grid md={3}>\n                    <Typography\n                      gutterBottom\n                      variant=\"h2\"\n                      className={classes.sectionheading}\n                    >\n                      Our Happy Clients\n                    </Typography>\n                  </Grid>\n\n                  <Grid md={3}>\n                    <Slider {...settings}>\n                      {poductlogo.map(index => {\n                        return (\n                          <div\n                            // className={classes.slickslider1}\n                            key={index.name}\n                          >\n                            <img\n                              src={index.src}\n                              alt=\"\"\n                              style={{ display: \"block\", margin: \"0 auto\" }}\n                            ></img>\n                          </div>\n                        );\n                      })}\n                    </Slider>\n                  </Grid>\n                </Grid>\n\n              </Grid>\n              </Paper> */}\n\n            <Paper className={classes.wizpaper}>\n              <Grid container alignItems=\"center\" justify=\"center\">\n                <Grid>\n                  <Typography className={classes.sectionheading}>\n                    <b>OUR BEST PRACTICES IN SOFTWARE DEVELOPMENT</b>\n                  </Typography>\n                </Grid>\n\n                <Grid className={classes.practicegrid}>\n                  <Typography\n                    variant=\"body1\"\n                    className={classes.content}\n                    gutterBottom\n                  >\n                    Whizdata uses advanced tools, technologies and methodologies\n                    for software development. The main stream of our software\n                    development activities is formed by a stack of NodeJS and\n                    other Javascript platform. All of our employees have been\n                    trained to use these software tools efficiently, with\n                    simplicity and scalability in mind.\n                  </Typography>\n              \n                 \n                </Grid>\n              </Grid>\n\n              <Grid container alignItems=\"center\" justify=\"center\">\n                <Grid  item md={4}>\n                  <Typography\n                    className={classes.sectionheading}\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                  >\n                    Our Happy Clients\n                  </Typography>\n                </Grid>\n\n                <Grid  item md={8} sm={12}>\n                  <Slider {...settings}>\n                    {poductlogo.map(index => {\n                      return (\n                        <div\n                          // className={classes.slickslider1}\n                          key={index.name}\n                        >\n                          <img\n                            src={index.src}\n                            alt=\"\"\n                            style={{ display: \"block\", margin: \"0 auto\" }}\n                          ></img>\n                        </div>\n                      );\n                    })}\n                  </Slider>\n                </Grid>\n              </Grid>\n            </Paper>\n          </Paper>\n\n          <AppBar position=\"static\" className={classes.footer}>\n            <Toolbar style={{ minHeight: 40 }}>\n              <Grid\n                justify=\"space-between\"\n                display=\"flex\"\n                className={classes.centeredgrid}\n                container\n              >\n                <Grid item>\n                  <Typography\n                    gutterBottom\n                    component=\"h2\"\n                    style={{ flex: 1, textAlign: \"center\" }}\n                  >\n                    ⓒ Copyright whizdata, All rights reserved\n                  </Typography>\n                </Grid>\n\n                <Grid item>\n                  <Typography\n                    gutterBottom\n                    component=\"h2\"\n                    style={{ textAlign: \"center\" }}\n                  >\n                    {\" \"}\n                    For enquiry contact us at sales@whizdata.in\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n        </div>\n        {/* </div> */}\n\n        <Dialog\n          open={open}\n          fullWidth\n          onClose={this.dialogClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          scroll=\"body\"\n        >\n          <DialogTitle\n            className={classes.formheader}\n            id=\"customized-dialog-title\"\n          >\n            <Typography variant=\"h6\">\n              <b> When to Contact</b>\n            </Typography>\n          </DialogTitle>\n          <DialogContent>\n            <form noValidate autoComplete=\"off\">\n              {formdata.map((formval, index) => {\n                return (\n                  <div key={index}>\n                    <TextField\n                      className={classes.textField}\n                      fullWidth\n                      multiline={formval.multiline ? formval.multiline : false}\n                      error={formval.error ? true : false}\n                      helperText={formval.error}\n                      id={formval.id}\n                      rows={formval.rows ? formval.rows : \"\"}\n                      value={formval.value}\n                      onChange={this.handleChange}\n                      label={formval.label}\n                      type={formval.type}\n                      InputLabelProps={{\n                        shrink: true,\n                        classes: {\n                          root: classes.label,\n                          focused: classes.cssFocused\n                        }\n                      }}\n                      InputProps={{ classes: { underline: classes.underline } }}\n                    />\n                  </div>\n                );\n              })}\n            </form>\n            <Button\n              onClick={this.handleFormSubmit}\n              variant=\"outlined\"\n              size=\"small\"\n              className={classes.actionButton}\n            >\n              Submit\n            </Button>\n            <Typography color={reqmsg ? \"green\" : \"error\"}>\n              <b></b>\n              {requestStatus}\n            </Typography>\n          </DialogContent>\n\n          <DialogActions>\n            {\" \"}\n            <Button className={classes.actionButtom} onClick={this.dialogClose}>\n              Back\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        {/* </div> */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles())(Main));\n","C:\\my-whizdata\\src\\components\\ScrollTop.js",[],"C:\\my-whizdata\\src\\components\\typo\\Contacts.js",["207","208","209","210","211","212","213","214","215","216","217","218","219"],"import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Topbar from \"../Topbar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { withRouter } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Slider from \"@material-ui/core/Slider\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Months from \"../common/Months\";\nimport Button from \"@material-ui/core/Button\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport MapContainer from \"./map.js\";\nimport { styles } from \"../genric.js\";\nimport fields from \"../common/contactfileds\";\nimport moment from \"moment\";\n\n\n\nconst bgimg = require(\"../../images/productCurvy.png\");\nconst { Interval, DateTime } = require(\"luxon\");\nconst checkboxes = [\n  {\n    name: \"iOS/Apple\",\n    checked: false,\n    label: \"iOS/Apple\",\n  },\n\n  {\n    name: \"Android\",\n    checked: false,\n    label: \"Android Mobile\",\n  },\n  {\n    name: \"Tab view\",\n    checked: false,\n    label: \"Tab view\",\n  },\n  {\n    name: \"Web Applications\",\n    checked: false,\n    label: \"Web Applications\",\n  },\n  {\n    name: \"Other\",\n    checked: false,\n    label: \"Others\",\n  },\n];\n\nconst monthRange = Months;\n\n\n\n\n\nclass Contacts extends Component {\n  constructor() {\n    super();\n    this.state = {\n    \n      contact: checkboxes,\n      start: 0,\n      period: 3,\n      arryDates: [],\n      \n      email: \"\",\n      description: \"\",\n      open: false,\n      startdate: \"\",\n      requestFailed: \"\",\n      error: { emailerror: \"\", descerror: \"\" },\n      enquiryStatus: true,\n    };\n  }\n\n  calculate = function* days(interval) {\n    let cursor = interval.start.startOf(\"day\");\n    while (cursor < interval.end) {\n      yield cursor;\n      cursor = cursor.plus({ days: 1 });\n    }\n  };\n\n  showDates = () => {\n    let start = DateTime.local(2020, 10, 1);\n    //let end = DateTime.local(2020, 10, 17);\n    let end = start.plus({ month: 6 });\n\n    let interval = Interval.fromDateTimes(start, end);\n\n    let arr = [];\n    for (var d of this.calculate(interval)) {\n      arr.push(d.toFormat(\"dd,MMMM, yyyy\"));\n    }\n    this.setState({ arryDates: arr });\n  };\n\n  // resetForm = () => {\n  //   this.setState({\n  //     contact: checkboxes,\n  //     start: 0,\n  //     period: 3,\n  //     startdate: \"\",\n  //     email: \"\",\n  //     description: \"\",\n  //   });\n  // };\n\n  componentDidMount() {\n    this.showDates();\n\n \n  }\n\n  handleCheck = (event, name) => {\n    let contact = [...this.state.contact];\n\n    let index = contact.findIndex((obj) => obj.name === event.target.id);\n    contact[index].checked = event.target.checked;\n    this.setState({ contact });\n  };\n\n  handleEmail = (event, name) => {\n    // eslint-disable-next-line\n    const re = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i;\n    if (event.target.value.match(re)) {\n      this.setState({\n        email: event.target.value,\n\n        error: { ...this.state.error, emailerror: \"\" },\n        enquiryStatus: false,\n      });\n    } else {\n      this.setState({\n        email: \"\",\n        error: {\n          ...this.state.error,\n          emailerror: \"email should be in www.example.com\",\n        },\n        enquiryStatus: true,\n      });\n    }\n  };\n  disablebutton = () => {\n    if (!this.state.email) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({\n      open: false,\n      email: \"\",\n      description: \"\",\n      contact: checkboxes,\n      start: 0,\n      period: 3,\n    });\n  };\n\n  handlemessege = (event, name) => {\n    this.setState({\n      description: event.target.value,\n      // error: { ...this.state.error, descerror: \"\" }\n      //enquiryStatus:false\n    });\n  };\n\n  handleClick = (props) => {\n    const { description } = this.state;\n    this.setState({ description: \"project data\" });\n  };\n\n  handleFormSubmit = (e) => {\n    let formData = this.state;\n    console.log(\"submit\", formData);\n    fetch(\"http://test5s.in/contactus.php\", {\n      method: \"POST\",\n\n      body: JSON.stringify(formData),\n      data: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // console.log(\"data .. \" + JSON.stringify(data));\n        if (data.recordAdded) {\n          this.setState({\n            // emailresponse: \"Mail sent\",\n            open: true,\n            requestFailed: \"Email sent our team will soon contact you\",\n          });\n        }\n      })\n\n      .catch((error) => {\n       \n        this.setState({\n          open: true,\n          requestFailed: \"Oops error occured.Please try after sometime!!!!!!\",\n        });\n      });\n  };\n\n  handleChangePeriod = (event, value) => {\n    this.setState({ period: value});\n  };\n\n  handleChangeStart = (event, value) => {\n    const { arryDates } = this.state;\n    this.setState({ start: value, startdate: arryDates[value] });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const currentPath = this.props.location.pathname;\n\n    const {\n      contact,\n      period,\n      error,\n      arr,\n      open,\n      formdata,\n      start,\n      email,\n     arryDates,\n      description,\n      requestFailed,\n      enquiryStatus,\n    } = this.state;\n    console.log(\"fomdt\", formdata);\n    const disablebutton =\n      email.length > 1 && description.length > 1 && error.emailerror.length > 1\n        ? true\n        : false;\n\n    let permittedValues = contact.map((x) => x.checked);\n    const checkerror = permittedValues.filter((value) => value).length < 2;\n   \n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar currentPath={currentPath} />\n        <div className={classes.bg}>\n          <div className={classes.innercontainer}>\n            <Grid container justify=\"center\">\n              <Grid\n                spacing={2}\n                className={classes.wizpaper + \" \" + classes.subgrid}\n                container\n                className={classes.grid}\n              >\n                <Grid item xs={12} md={4}>\n                  <Paper className={classes.paper}>\n                    <div className={classes.box}>\n                      <FormControl\n                        component=\"fieldset\"\n                        className={classes.formControl}\n                        error={checkerror}\n                      >\n                        <Typography\n                          color=\"secondary\"\n                          gutterBottom\n                          variant=\"body1\"\n                          className={classes.headerText}\n                        >\n                          What Platforms?\n                        </Typography>\n                        <FormGroup className={classes.formgroup}>\n                          {contact.map((index) => {\n                            return (\n                              <div key={index.label}>\n                                <FormControlLabel\n                                  style={{ margin: \"1px\" }}\n                                  control={\n                                    <Checkbox\n                                      className={classes.checkbox}\n                                      id={index.name}\n                                      checked={index.checked}\n                                      onChange={this.handleCheck}\n                                      value={index.name}\n                                    />\n                                  }\n                                  label={index.label}\n                                />\n                              </div>\n                            );\n                          })}\n                        </FormGroup>\n                      </FormControl>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Paper className={classes.paper}>\n                    <div className={classes.box}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        Timeline?\n                      </Typography>\n\n                      <div className={classes.blockCenter}>\n                        <Typography\n                          color=\"secondary\"\n                          variant=\"h6\"\n                          className={classes.headerText}\n                          gutterBottom\n                        >\n                          {period} months\n                        </Typography>\n                      </div>\n                      <div>\n                        <Slider\n                          classes={{\n                            thumb: classes.thumb,\n                            track: classes.thumb,\n                          }}\n                          value={period}\n                          min={1}\n                          max={6}\n                          step={1}\n                          onChange={this.handleChangePeriod}\n                        />\n                      </div>\n                      <div className={classes.rangeLabel}>\n                        <div>\n                          <Typography variant=\"subtitle2\">1 month</Typography>\n                        </div>\n                        <div>\n                          <Typography variant=\"subtitle2\">6 months</Typography>\n                        </div>\n                      </div>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <Paper className={classes.paper}>\n                    <div className={classes.box}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        Start date?\n                      </Typography>\n\n                      <div className={classes.blockCenter}>\n                        <Typography\n                          color=\"secondary\"\n                          className={classes.headerText}\n                          variant=\"h6\"\n                          gutterBottom\n                        >\n                          {arryDates[start]}\n                        </Typography>\n                      </div>\n                      <div>\n                        <Slider\n                          classes={{\n                            thumb: classes.thumb,\n                            track: classes.thumb,\n                          }}\n                          value={start}\n                          min={0}\n                          max={arryDates.length}\n                          step={1}\n                          onChange={this.handleChangeStart}\n                        />\n                      </div>\n                      <div className={classes.rangeLabel}>\n                        <div>\n                          <Typography variant=\"subtitle2\">\n                            October 2020\n                          </Typography>\n                        </div>\n                        <div>\n                          <Typography variant=\"subtitle2\">\n                            March 2021\n                          </Typography>\n                        </div>\n                      </div>\n                    </div>\n                  </Paper>\n                </Grid>\n                <Grid container className={classes.outergrid} item xs={12}>\n                  <Grid item xs={12} md={6}>\n                    <form>\n                      <div>\n                        <TextField\n                          className={classes.emailField}\n                          label=\"Email\"\n                          onChange={this.handleEmail}\n                          InputLabelProps={{\n                            classes: {\n                              root: classes.label,\n                              focused: classes.cssFocused,\n                            },\n                          }}\n                          InputProps={{\n                            classes: {\n                              root: classes.cssOutlinedInput,\n                              focused: classes.cssFocused,\n                              notchedOutline: classes.notchedOutline,\n                              input: classes.input,\n                            },\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                <MailOutlineIcon\n                                  className={classes.iconstyle}\n                                />\n                              </InputAdornment>\n                            ),\n                          }}\n                          margin=\"normal\"\n                          variant=\"outlined\"\n                          error={error.emailerror.length === 0 ? false : true}\n                          helperText={error.emailerror}\n                        />\n                      </div>\n\n                      <div>\n                        <TextField\n                          multiline\n                          rows=\"5\"\n                          label=\"Description\"\n                          placeholder=\"Brief Description of the project\"\n                          className={classes.textField}\n                          margin=\"normal\"\n                          onChange={this.handlemessege}\n                          variant=\"outlined\"\n                          InputLabelProps={{\n                            classes: {\n                              root: classes.label,\n                              focused: classes.cssFocused,\n                            },\n                          }}\n                          InputProps={{\n                            classes: {\n                              root: classes.cssOutlinedInput,\n                              focused: classes.cssFocused,\n                              notchedOutline: classes.notchedOutline,\n                              input: classes.input,\n                            },\n                          }}\n                        />\n                        <div\n                          style={{\n                            display: \"flex\",\n                            justifyContent: \"flex-center\",\n                          }}\n                        >\n                          <Button\n                            variant=\"outlined\"\n                            className={classes.actionButtom}\n                            onClick={this.handleFormSubmit}\n                            disabled={enquiryStatus}\n                          >\n                            Enquire\n                          </Button>\n\n                          {/* <Button\n                          variant=\"outlined\"\n                          className={classes.actionButtom}\n                          onClick={this.handleFormSubmit}\n                        >\n                          Enquire\n                        </Button> */}\n                          {/* <Typography\n                          variant=\"subtitle2\"\n                          className={classes.responsetext}\n                        >\n                          {emailresponse}\n                        </Typography> */}\n                          {/* <Wizard onClick={this.handleClick} description={description} /> */}\n                        </div>\n                      </div>\n                    </form>\n\n                    <Dialog\n                      open={open}\n                      onClose={this.handClose}\n                      aria-labelledby=\"alert-dialog-title\"\n                      aria-describedby=\"alert-dialog-description\"\n                      scroll=\"body\"\n                    >\n                      <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                          {requestFailed}\n                        </DialogContentText>\n                      </DialogContent>\n\n                      <DialogActions>\n                        {\" \"}\n                        <Button\n                          className={classes.actionButtom}\n                          onClick={this.handleClose}\n                        >\n                          Back\n                        </Button>\n                      </DialogActions>\n                    </Dialog>\n                  </Grid>\n                  <Grid\n                    item\n                    className={classes.mapgrid + \" \" + classes.outer1grid}\n                    xs={12}\n                    md={6}\n                  >\n                    <Typography\n                      className={classes.sectionheading}\n                      gutterBottom\n                      variant=\"h2\"\n                    >\n                      <b>Locate us at </b>\n                    </Typography>\n                    <MapContainer />\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles(\"contactstyles\"))(Contacts));\n","C:\\my-whizdata\\src\\components\\Detail.js\\offering.js",[],"C:\\my-whizdata\\src\\components\\Detail.js\\aproach.js",[],"C:\\my-whizdata\\src\\components\\Detail.js\\baseline.js",[],"C:\\my-whizdata\\src\\components\\genric.js",["220","221"],"C:\\my-whizdata\\src\\components\\Topbar.js",[],"C:\\my-whizdata\\src\\components\\typo\\map.js",["222"],"import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport React, { Component } from \"react\";\n import Typography from \"@material-ui/core/Typography\";\nconst style = {\n\n  width: \"100%\",\n    height: '250px'\n};\n\n const data = [\n   {\n     name: \"Whizdata Solutions\",\n     title: \"office\",\n     lat: 12.94074,\n     lng: 77.570398,\n     id: 1\n   },\n ];\n\nexport class MapContainer extends Component {\n         constructor(props) {\n           super(props);\n           this.state = {\n             showingInfoWindow: false,\n             activeMarker: {},\n             selectedPlace: {}\n           };\n         }\n\n    shouldComponentUpdate(nextProps, nextState)\n    {\n          \n           if (this.state == nextState) {\n             return false;\n           } else {\n             return true;\n           }\n         }\n\n         onMarkerClick = (props, marker, e) =>\n           this.setState({\n             selectedPlace: props,\n             activeMarker: marker,\n             showingInfoWindow: true\n           });\n\n         onMapClicked = props => {\n           if (this.state.showingInfoWindow) {\n             this.setState({\n               showingInfoWindow: false,\n               activeMarker: null\n             });\n           }\n         };\n         displayMarkers = () => {\n           return data.map((store, index) => {\n             return (\n               <Marker\n                 onClick={this.onMarkerClick}\n                 key={index}\n                 id={index}\n                 name={store.name}\n                 position={{\n                   lat: store.lat,\n                   lng: store.lng\n                 }}\n               />\n             );\n           });\n         };\n\n         render() {\n    \n           return (\n             <Map\n               onClick={this.onMapClicked}\n               google={this.props.google}\n               zoom={14}\n               style={style}\n               initialCenter={{ lat: 12.94074, lng: 77.570398 }}\n             >\n               {this.displayMarkers()}\n               <InfoWindow\n                 marker={this.state.activeMarker}\n                 visible={this.state.showingInfoWindow}\n                 onClose={this.onClose}\n               >\n                 <Typography variant=\"h6\" gutterBottom>\n                   {this.state.selectedPlace.name}\n                 </Typography>\n               </InfoWindow>\n             </Map>\n           );\n         }\n       }\n// AIzaSyBGmwbep3PV4t5 - VkSUGoLPygpElHgCt3Y;\n//  AIzaSyDUFP62wzPrpTvjZo2VdJOg0_8Xqlo1vwk;\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyBGmwbep3PV4t5 - VkSUGoLPygpElHgCt3Y\"\n})(MapContainer);","C:\\my-whizdata\\src\\components\\common\\contactfileds.js",["223"],"\r\n\r\nconst fileds = [\r\n    {\r\n        \"id\": \"checkbox\", id: \"check\",\r\n        \"value\": 0, \r\n        \"type\": \"checkbox\",  options:[\r\n            {\r\n                name: \"iOS/Apple\",\r\n                checked: false,\r\n                label: \"iOS/Apple\",\r\n            },\r\n\r\n            {\r\n                name: \"Android\",\r\n                checked: false,\r\n                label: \"Android Mobile\",\r\n            },\r\n            {\r\n                name: \"Tab view\",\r\n                checked: false,\r\n                label: \"Tab view\",\r\n            },\r\n            {\r\n                name: \"Web Applications\",\r\n                checked: false,\r\n                label: \"Web Applications\",\r\n            },\r\n            {\r\n                name: \"Other\",\r\n                checked: false,\r\n                label: \"Others45\",\r\n            },\r\n        ],\r\n    },\r\n\r\n   \r\n    {\r\n        \"id\": \"name\", \"displayName\": \"Name\", \"order\": 1, \"key\": \"name\", adorment: \"account\", label: \"Name\",\r\n        \"type\": \"string\", \"error\": \"\", \"value\": \"\", \"required\": true\r\n    },\r\n\r\n\r\n    {\r\n        \"id\": \"email\", \"displayName\": \"Email\", \"order\": 2, \"key\": \"email\", adorment: \"email\", label: \"Email-Id\",\r\n        \"type\": \"string\", \"error\": \"\", \"value\": \"\", \"required\": true\r\n    },\r\n\r\n\r\n    // {\r\n    //   id: \"email\",\r\n    //   label: \"Email-Id\",\r\n    //   type: \"email\",\r\n    //   required: true,\r\n    //   adorment: \"email\",\r\n\r\n    //   value: \"\",\r\n    //   error: \"\",\r\n    // },\r\n  \r\n    {\r\n        id: \"Messege\",\r\n        \"displayName\": \"Messege\",\r\n        label: \"Messege\",\r\n        adorment: \"message\",\r\n        type: \"text\",\r\n        value: \"\",\r\n        key: \"message\",\r\n        \"required\": true,\r\n\r\n        multiline: true,\r\n        rows: \"5\",\r\n    },\r\n];\r\n\r\nexport default fileds;","C:\\my-whizdata\\src\\components\\common\\Months.js",[],"C:\\my-whizdata\\src\\components\\common\\formdata.js",[],"C:\\my-whizdata\\src\\components\\Menu.js",[],"C:\\my-whizdata\\src\\components\\Footer.js",["224","225","226","227","228"],"import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { withRouter } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\n\n\n// color:#d90404\n\n\nconst styles = theme => ({\n  appBar: {\n    boxShadow: \"none\",\n    borderBottom: `1px solid ${theme.palette.grey[\"100\"]}`,\n    backgroundColor: \"#d3d3d3\",\n    top: \"0\",\n    bottom: 0\n  },\n  inline: {\n    display: \"inline\"\n  },\n  breakpoint: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: 0,\n      marginRight: 21\n    }\n  },\n  flex: {\n    display: \"flex\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"flex\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\"\n    }\n  },\n\n  footertext: {\n    fontSize: 14,\n    flexGrow: 1,\n    textAlign: \"center\"\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    marginTop: \"15px\",\n    textAlign: \"center\"\n  },\n  grid: {\n    //paddingTop: theme.spacing(2)\n    backgroundColor: \"red\"\n  }\n});\n\nclass Footer extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <AppBar\n        position=\"relative\"\n        // color=\"primary\"\n        // className={{ top: \"0\", bottom: 0 }}\n        color=\"default\"\n        className={classes.appBar}\n      >\n  \n        <Grid\n          item\n          container\n          xs={12}\n          sm={12}\n          md={12}\n          style={{ alignItems: \"center\" }}\n        >\n          <Grid container item xs={12} sm={12} md={4}>\n            <Typography gutterBottom className={classes.footertext}>\n              ⓒ Copyright whizdata, All rights reserved\n            </Typography>\n          </Grid>\n          <Grid container item xs={12} sm={12} md={4}>\n            {/* <Grid item xs={12} sm={12} md={12}>\n              <Typography gutterBottom className={classes.footertext}>\n                Social Networks:\n              </Typography>\n            </Grid> */}\n            {/* <Grid item xs={12} sm={12} md={12}>\n              <Typography gutterBottom className={classes.footertext}>\n                <Icon>\n                  <InstagramIcon />\n                </Icon>\n                <Icon>\n                  <FacebookIcon />\n                </Icon>\n                <Icon>\n                  <TwitterIcon />\n                </Icon>\n                <Icon>\n                  <LinkedInIcon />\n                </Icon>\n              </Typography>\n            </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} md={4}>\n            <Grid item xs={12} sm={12} md={12}>\n              <Typography gutterBottom className={classes.footertext}>\n                For enquiry contact us @ sales@whizdata.in\n              </Typography>\n            </Grid>\n          </Grid>\n        \n        </Grid>\n      \n      </AppBar>\n    );\n  }\n}\n\n\n\n   // {/* <Box display={{ xs: \"block\", sm: \"block\", lg: \"none\", md: \"none\" }}>\n        //   <footer>\n        //     <Footer />\n        //   </footer>\n        // </Box>\n\n        // {/* <div className={classes.root}> */}\n        // {/* <Box display={{ xs: \"none\", sm: \"none\", md: \"block\", lg: \"block\" }}>\n        //   <footer\n        //     style={{\n        //       background: \"#1a1a1a\",\n        //       color: \"#929292\",\n        //       zIndex: \"1600\",\n        //       bottom: 0,\n        //       position: \"fixed\",\n        //       width: \"100%\",\n        //       marginTop: \"100\"\n        //     }}\n        //   >\n        //     <Footer />\n        //   </footer>\n        // </Box>  */}\n\n\n\n\n\n\n\n\nexport default withRouter(withStyles(styles)(Footer));\n","C:\\my-whizdata\\src\\components\\Dashboard.js",["229"],"import React,  { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withRouter, Link } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport Months from './common/Months';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport Loading from './common/Loading';\n\nimport Topbar from './Topbar';\n\nconst numeral = require('numeral');\nnumeral.defaultFormat('0,000');\n\nconst backgroundShape = require('../images/shape.svg');\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey[\"100\"],\n    overflow: \"hidden\",\n    background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"0 400px\",\n    paddingBottom: 200\n  },\n  grid: {\n    width: 1200,\n    margin: `0 ${theme.spacing(2)}px`,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"calc(100% - 20px)\"\n    }\n  },\n  loadingState: {\n    opacity: 0.05\n  },\n  paper: {\n    padding: theme.spacing(3),\n    textAlign: \"left\",\n    color: theme.palette.text.secondary\n  },\n  rangeLabel: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    paddingTop: theme.spacing(2)\n  },\n  topBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  outlinedButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1)\n  },\n  actionButtom: {\n    textTransform: \"uppercase\",\n    margin: theme.spacing(1),\n    width: 152,\n    height: 36\n  },\n  blockCenter: {\n    padding: theme.spacing(2),\n    textAlign: \"center\"\n  },\n  block: {\n    padding: theme.spacing(2)\n  },\n  loanAvatar: {\n    display: \"inline-block\",\n    verticalAlign: \"center\",\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.main\n  },\n  interestAvatar: {\n    display: \"inline-block\",\n    verticalAlign: \"center\",\n    width: 16,\n    height: 16,\n    marginRight: 10,\n    marginBottom: -2,\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.light\n  },\n  inlining: {\n    display: \"inline-block\",\n    marginRight: 10\n  },\n  buttonBar: {\n    display: \"flex\"\n  },\n  noBorder: {\n    borderBottomStyle: \"hidden\"\n  },\n  mainBadge: {\n    textAlign: \"center\",\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(4)\n  }\n});\n\nconst monthRange = Months;\n\nclass Dashboard extends Component {\n\n  state = {\n    loading: true,\n    amount: 15000,\n    period:3,\n    start: 0,\n    monthlyInterest: 0,\n    totalInterest: 0,\n    monthlyPayment: 0,\n    totalPayment: 0,\n    data: []\n  };\n\n  updateValues() {\n    const { amount, period, start } = this.state;\n    const monthlyInterest = (amount)*(Math.pow(0.01*(1.01), period))/(Math.pow(0.01, period - 1))\n    const totalInterest = monthlyInterest * (period + start);\n    const totalPayment = amount + totalInterest;\n    const monthlyPayment = period > start ? totalPayment/(period - start) : totalPayment/(period)\n\n    const data = Array.from({length: period + start}, (value, i) => {\n      const delayed = i < start;\n      return {\n        name: monthRange[i],\n        'Type': delayed ? 0 : Math.ceil(monthlyPayment).toFixed(0),\n        'OtherType': Math.ceil(monthlyInterest).toFixed(0)\n      }\n    })\n\n    this.setState({monthlyInterest, totalInterest, totalPayment, monthlyPayment, data})\n  }\n\n  componentDidMount() {\n    this.updateValues();\n  }\n\n  handleChangeAmount = (event, value) => {\n    this.setState({amount: value, loading: false});\n    this.updateValues();\n   \n  }\n\n  handleChangePeriod = (event, value) => {\n    this.setState({ period: value });\n \n   this.updateValues();\n  }\n\n  handleChangeStart = (event, value) => {\n    this.setState({start: value, loading: false});\n   this.updateValues();\n  \n  }\n\n  render() {\n    const { classes } = this.props;\n    const { amount, period, start, monthlyPayment,\n      monthlyInterest, data, loading } = this.state;\n    const currentPath = this.props.location.pathname\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar currentPath={currentPath} />\n        <div className={classes.root}>\n          <Grid container justify=\"center\">\n            <Grid spacing={2} alignItems=\"center\" justify=\"center\" container className={classes.grid}>\n              <Grid item xs={12}>\n                <div className={classes.topBar}>\n                  <div className={classes.block}>\n                    <Typography variant=\"h6\" gutterBottom>Dashboard</Typography>\n                    <Typography variant=\"body1\">\n                      Adjust and play with our sliders.\n                    </Typography>\n                  </div>\n                  <div>\n                    <Button variant=\"outlined\" className={classes.outlinedButtom}>\n                      Get help\n                    </Button>\n                  </div>\n                </div>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      How much you want to transfer\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      Use slider to set the amount you need.\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color='secondary' variant=\"h6\" gutterBottom>\n                        {numeral(amount).format()} USD\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={amount}\n                        min={20000}\n                        max={150000}\n                        step={15000}\n                        onChange={this.handleChangeAmount}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          15,000 USD\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          150,000 USD\n                        </Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Period\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      A sample period\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color='secondary' variant=\"h6\" gutterBottom>\n                        {period} months\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={period}\n                        min={1}\n                        max={6}\n                        step={1}\n                        onChange={this.handleChangePeriod}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          1 month\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          6 months\n                        </Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper}>\n                  <div>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      Start date\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      Set your preferred start date.\n                    </Typography>\n                    <div className={classes.blockCenter}>\n                      <Typography color='secondary' variant=\"h6\" gutterBottom>\n                        {monthRange[start]}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Slider\n                        value={start}\n                        min={0}\n                        max={5}\n                        step={1}\n                        onChange={this.handleChangeStart}\n                      />\n                    </div>\n                    <div className={classes.rangeLabel}>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          Dec 2018\n                        </Typography>\n                      </div>\n                      <div>\n                        <Typography variant=\"subtitle2\">\n                          May 2019\n                        </Typography>\n                      </div>\n                    </div>\n                  </div>\n                </Paper>\n              </Grid>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item xs={12} md={8} >\n                  <Paper className={classes.paper} style={{position: 'relative'}}>\n                    <Loading loading={loading} />\n                    <div className={loading ? classes.loadingState : ''}>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        Some details\n                      </Typography>\n                      <Typography variant=\"body1\">\n                        Details about the graph\n                      </Typography>\n                      <div style={{ marginBottom: 14}}>\n                        <div className={classes.inlining}>\n                          <Avatar className={classes.loanAvatar}></Avatar>\n                          <Typography className={classes.inlining} variant=\"subtitle2\" gutterBottom>\n                            Type\n                          </Typography>\n                          <Typography className={classes.inlining} color='secondary' variant=\"h6\" gutterBottom>\n                            {numeral(monthlyPayment).format()} units\n                          </Typography>\n                        </div>\n                        <div className={classes.inlining}>\n                          <Avatar className={classes.interestAvatar}></Avatar>\n                          <Typography className={classes.inlining} variant=\"subtitle2\" gutterBottom>\n                            Othe type\n                          </Typography>\n                          <Typography className={classes.inlining} color=\"secondary\" variant=\"h6\" gutterBottom>\n                            {numeral(monthlyInterest).format()} units\n                          </Typography>\n                        </div>\n                      </div>\n                      <div >\n                      \n                      </div>\n                    </div>\n                  </Paper>\n              </Grid>\n              <Grid item xs={12} md={4}>\n                <Paper className={classes.paper} style={{position: 'relative'}}>\n                  <Loading loading={loading} />\n                  <div className={loading ? classes.loadingState : ''}>\n                    <Typography variant=\"subtitle1\" gutterBottom>\n                      State\n                    </Typography>\n                    <div className={classes.mainBadge}>\n                      <VerifiedUserIcon style={{fontSize: 72}} fontSize={'large'} color={'secondary'} />\n                      <Typography variant=\"h5\" color={'secondary'} gutterBottom>\n                        Verified\n                      </Typography>\n                    </div>\n                    <div className={classes.buttonBar}>\n                      <Button to={{ pathname: \"/dashboard\", search: `?type=save` }} component={Link} variant=\"outlined\" className={classes.actionButtom}>\n                        Save\n                      </Button>\n                      <Button to={{ pathname: \"/dashboard\", search: `?type=apply` }} component={Link} color='primary' variant=\"contained\" className={classes.actionButtom}>\n                        Apply\n                      </Button>\n                    </div>\n                  </div>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(withStyles(styles)(Dashboard));\n\n\n\n","C:\\my-whizdata\\src\\components\\common\\Loading.js",[],"D:\\whizd\\src\\index.js",[],["230","231"],"D:\\whizd\\src\\serviceWorker.js",[],"D:\\whizd\\src\\reponsive.js",[],"D:\\whizd\\src\\routes.js",["232"],"D:\\whizd\\src\\components\\ScrollTop.js",[],"D:\\whizd\\src\\components\\Main.js",["233","234","235","236"],"D:\\whizd\\src\\components\\Detail.js\\offering.js",[],"D:\\whizd\\src\\components\\typo\\Contacts.js",["237","238","239"],"D:\\whizd\\src\\components\\Detail.js\\baseline.js",[],"D:\\whizd\\src\\components\\Detail.js\\aproach.js",[],"D:\\whizd\\src\\components\\Wizard.js",[],"D:\\whizd\\src\\components\\genric.js",[],"D:\\whizd\\src\\components\\typo\\map.js",[],"D:\\whizd\\src\\components\\Topbar.js",[],"D:\\whizd\\src\\components\\common\\contactfileds.js",["240"],["241","242"],"D:\\whizd\\src\\components\\Menu.js",[],"D:\\whizd\\src\\components\\common\\formdata.js",[],"D:\\whizd\\src\\components\\Footer.js",[],"D:\\whizd\\src\\components\\AboutUs.js",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":17},{"ruleId":"251","severity":1,"message":"252","line":14,"column":1,"nodeType":"253","endLine":29,"endColumn":3},{"ruleId":"254","severity":1,"message":"255","line":193,"column":5,"nodeType":"256","messageId":"257","endLine":193,"endColumn":10},{"ruleId":"254","severity":1,"message":"255","line":226,"column":5,"nodeType":"256","messageId":"257","endLine":226,"endColumn":10},{"ruleId":"254","severity":1,"message":"255","line":255,"column":5,"nodeType":"256","messageId":"257","endLine":255,"endColumn":10},{"ruleId":"254","severity":1,"message":"255","line":289,"column":5,"nodeType":"256","messageId":"257","endLine":289,"endColumn":10},{"ruleId":"247","severity":1,"message":"258","line":346,"column":22,"nodeType":"249","messageId":"250","endLine":346,"endColumn":27},{"ruleId":"247","severity":1,"message":"259","line":347,"column":11,"nodeType":"249","messageId":"250","endLine":347,"endColumn":29},{"ruleId":"247","severity":1,"message":"260","line":20,"column":8,"nodeType":"249","messageId":"250","endLine":20,"endColumn":17},{"ruleId":"247","severity":1,"message":"261","line":22,"column":8,"nodeType":"249","messageId":"250","endLine":22,"endColumn":11},{"ruleId":"247","severity":1,"message":"262","line":26,"column":8,"nodeType":"249","messageId":"250","endLine":26,"endColumn":25},{"ruleId":"247","severity":1,"message":"263","line":28,"column":8,"nodeType":"249","messageId":"250","endLine":28,"endColumn":14},{"ruleId":"247","severity":1,"message":"264","line":30,"column":8,"nodeType":"249","messageId":"250","endLine":30,"endColumn":28},{"ruleId":"265","severity":1,"message":"266","line":178,"column":24,"nodeType":"267","messageId":"268","endLine":178,"endColumn":26},{"ruleId":"265","severity":1,"message":"269","line":188,"column":23,"nodeType":"267","messageId":"268","endLine":188,"endColumn":25},{"ruleId":"270","severity":1,"message":"271","line":190,"column":42,"nodeType":"272","messageId":"273","endLine":190,"endColumn":43,"suggestions":"274"},{"ruleId":"270","severity":1,"message":"271","line":190,"column":62,"nodeType":"272","messageId":"273","endLine":190,"endColumn":63,"suggestions":"275"},{"ruleId":"276","severity":1,"message":"277","line":192,"column":17,"nodeType":"278","messageId":"257","endLine":192,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":194,"column":24,"nodeType":"278","messageId":"257","endLine":194,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":194,"column":43,"nodeType":"278","messageId":"257","endLine":194,"endColumn":45},{"ruleId":"276","severity":1,"message":"277","line":195,"column":29,"nodeType":"278","messageId":"257","endLine":195,"endColumn":31},{"ruleId":"276","severity":1,"message":"277","line":196,"column":24,"nodeType":"278","messageId":"257","endLine":196,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":336,"column":38,"nodeType":"278","messageId":"257","endLine":336,"endColumn":40},{"ruleId":"247","severity":1,"message":"279","line":16,"column":8,"nodeType":"249","messageId":"250","endLine":16,"endColumn":22},{"ruleId":"247","severity":1,"message":"280","line":24,"column":10,"nodeType":"249","messageId":"250","endLine":24,"endColumn":13},{"ruleId":"247","severity":1,"message":"281","line":24,"column":15,"nodeType":"249","messageId":"250","endLine":24,"endColumn":25},{"ruleId":"247","severity":1,"message":"282","line":24,"column":27,"nodeType":"249","messageId":"250","endLine":24,"endColumn":33},{"ruleId":"247","severity":1,"message":"283","line":24,"column":35,"nodeType":"249","messageId":"250","endLine":24,"endColumn":51},{"ruleId":"247","severity":1,"message":"284","line":27,"column":8,"nodeType":"249","messageId":"250","endLine":27,"endColumn":14},{"ruleId":"247","severity":1,"message":"285","line":28,"column":8,"nodeType":"249","messageId":"250","endLine":28,"endColumn":14},{"ruleId":"247","severity":1,"message":"286","line":32,"column":7,"nodeType":"249","messageId":"250","endLine":32,"endColumn":12},{"ruleId":"247","severity":1,"message":"287","line":63,"column":7,"nodeType":"249","messageId":"250","endLine":63,"endColumn":17},{"ruleId":"247","severity":1,"message":"288","line":189,"column":13,"nodeType":"249","messageId":"250","endLine":189,"endColumn":24},{"ruleId":"247","severity":1,"message":"289","line":240,"column":7,"nodeType":"249","messageId":"250","endLine":240,"endColumn":10},{"ruleId":"247","severity":1,"message":"290","line":251,"column":11,"nodeType":"249","messageId":"250","endLine":251,"endColumn":24},{"ruleId":"291","severity":1,"message":"292","line":271,"column":17,"nodeType":"293","endLine":271,"endColumn":41},{"ruleId":"254","severity":1,"message":"294","line":44,"column":11,"nodeType":"256","messageId":"257","endLine":44,"endColumn":17},{"ruleId":"254","severity":1,"message":"295","line":1200,"column":10,"nodeType":"256","messageId":"257","endLine":1200,"endColumn":19},{"ruleId":"276","severity":1,"message":"277","line":33,"column":27,"nodeType":"278","messageId":"257","endLine":33,"endColumn":29},{"ruleId":"254","severity":1,"message":"296","line":5,"column":27,"nodeType":"256","messageId":"257","endLine":5,"endColumn":29},{"ruleId":"247","severity":1,"message":"297","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":21},{"ruleId":"247","severity":1,"message":"298","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":20},{"ruleId":"247","severity":1,"message":"299","line":8,"column":8,"nodeType":"249","messageId":"250","endLine":8,"endColumn":20},{"ruleId":"247","severity":1,"message":"300","line":11,"column":8,"nodeType":"249","messageId":"250","endLine":11,"endColumn":12},{"ruleId":"247","severity":1,"message":"301","line":12,"column":8,"nodeType":"249","messageId":"250","endLine":12,"endColumn":19},{"ruleId":"247","severity":1,"message":"302","line":172,"column":24,"nodeType":"249","messageId":"250","endLine":172,"endColumn":28},{"ruleId":"243","replacedBy":"303"},{"ruleId":"245","replacedBy":"304"},{"ruleId":"251","severity":1,"message":"252","line":13,"column":2,"nodeType":"253","endLine":28,"endColumn":3},{"ruleId":"265","severity":1,"message":"266","line":152,"column":24,"nodeType":"267","messageId":"268","endLine":152,"endColumn":26},{"ruleId":"265","severity":1,"message":"269","line":162,"column":23,"nodeType":"267","messageId":"268","endLine":162,"endColumn":25},{"ruleId":"270","severity":1,"message":"271","line":164,"column":42,"nodeType":"272","messageId":"273","endLine":164,"endColumn":43,"suggestions":"305"},{"ruleId":"270","severity":1,"message":"271","line":164,"column":62,"nodeType":"272","messageId":"273","endLine":164,"endColumn":63,"suggestions":"306"},{"ruleId":"247","severity":1,"message":"288","line":187,"column":13,"nodeType":"249","messageId":"250","endLine":187,"endColumn":24},{"ruleId":"247","severity":1,"message":"289","line":239,"column":7,"nodeType":"249","messageId":"250","endLine":239,"endColumn":10},{"ruleId":"247","severity":1,"message":"290","line":250,"column":11,"nodeType":"249","messageId":"250","endLine":250,"endColumn":24},{"ruleId":"254","severity":1,"message":"296","line":5,"column":27,"nodeType":"256","messageId":"257","endLine":5,"endColumn":29},{"ruleId":"243","replacedBy":"307"},{"ruleId":"245","replacedBy":"308"},"no-native-reassign",["309"],"no-negated-in-lhs",["310"],"no-unused-vars","'Dashboard' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'title'.","ObjectExpression","unexpected","'icons' is assigned a value but never used.","'transitionDuration' is assigned a value but never used.","'Container' is defined but never used.","'Box' is defined but never used.","'DialogContentText' is defined but never used.","'Footer' is defined but never used.","'SwapVertOutlinedIcon' is defined but never used.","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a return value from arrow function.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["311","312"],["313","314"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'FormHelperText' is defined but never used.","'Map' is defined but never used.","'InfoWindow' is defined but never used.","'Marker' is defined but never used.","'GoogleApiWrapper' is defined but never used.","'fields' is defined but never used.","'moment' is defined but never used.","'bgimg' is assigned a value but never used.","'monthRange' is assigned a value but never used.","'description' is assigned a value but never used.","'arr' is assigned a value but never used.","'disablebutton' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Duplicate key 'border'.","Duplicate key 'layergrid'.","Duplicate key 'id'.","'InstagramIcon' is defined but never used.","'FacebookIcon' is defined but never used.","'LinkedInIcon' is defined but never used.","'Icon' is defined but never used.","'TwitterIcon' is defined but never used.","'data' is assigned a value but never used.",["309"],["310"],["315","316"],["317","318"],["309"],["310"],"no-global-assign","no-unsafe-negation",{"messageId":"319","fix":"320","desc":"321"},{"messageId":"322","fix":"323","desc":"324"},{"messageId":"319","fix":"325","desc":"321"},{"messageId":"322","fix":"326","desc":"324"},{"messageId":"319","fix":"327","desc":"321"},{"messageId":"322","fix":"328","desc":"324"},{"messageId":"319","fix":"329","desc":"321"},{"messageId":"322","fix":"330","desc":"324"},"removeEscape",{"range":"331","text":"332"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"333","text":"334"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"335","text":"332"},{"range":"336","text":"334"},{"range":"337","text":"332"},{"range":"338","text":"334"},{"range":"339","text":"332"},{"range":"340","text":"334"},[4927,4928],"",[4927,4927],"\\",[4947,4948],[4947,4947],[4289,4290],[4289,4289],[4309,4310],[4309,4309]]